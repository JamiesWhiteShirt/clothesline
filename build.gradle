buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'

version = "1.12.2-1.0.0.0-SNAPSHOT"
group = "com.jamieswhiteshirt" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "clothesline"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2-14.23.3.2658"
    runDir = "run"

    clientJvmArgs = serverJvmArgs = ["-Dfml.coreMods.load=$fmlCorePlugin"]

    mappings = "snapshot_20180410"
}

repositories {
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
    maven {
        url "http://maven.jamieswhiteshirt.com/libs-snapshot/"
    }
}

configurations {
    contained
    contained.transitive = false
}

dependencies {
    contained "com.jamieswhiteshirt:rtree-3i-lite:0.1-SNAPSHOT"
    compile "com.jamieswhiteshirt:rtree-3i-lite:0.1-SNAPSHOT"
    contained "com.jamieswhiteshirt:clothesline-hooks:1.12.2-1.0.0.0-SNAPSHOT"
    deobfCompile "com.jamieswhiteshirt:clothesline-hooks:1.12.2-1.0.0.0-SNAPSHOT"
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    from sourceSets.api.output
    from sourceSets.main.output

    from(configurations.contained.files) {
        include '*'
        into 'META-INF/libraries'
    }

    manifest {
        attributes([
                'ContainedDeps': configurations.contained.files.collect { it.name }.join(" "),
                'Maven-Artifact': "${project.group}:${project.archivesBaseName}:${project.version}",
                'Timestamp': System.currentTimeMillis(),
                'FMLAT': 'clothesline_at.cfg'
        ])
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.api.allSource
    from sourceSets.main.allSource
    classifier = 'sources'
}

task apiJar(type: Jar) {
    from sourceSets.api.output
    classifier = 'api'
}

task signJar(type: SignJar, dependsOn: reobfJar) {
    onlyIf {
        project.hasProperty('keyStore')
    }

    inputFile = jar.archivePath
    outputFile = jar.archivePath

    keyStore = project.properties.keyStore
    alias = project.properties.keyStoreAlias
    storePass = project.properties.keyStorePass
    keyPass = project.properties.keyStoreKeyPass
}

build.dependsOn signJar
